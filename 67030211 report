1. เมื่อไหร่ควรแยกเป็น component ใหม่
ถ้าโค้ดเริ่มยาว เกะกะ หรือมีบางส่วนที่ใช้ซ้ำบ่อย เช่น พวก driver หรือฟังก์ชันช่วยต่าง ๆ ควรแยกเป็น component จะได้แก้ไขง่าย ไม่ต้องไปรวมอยู่ใน main ทั้งหมด และสามารถเอาไปใช้โปรเจกต์อื่นได้ด้วย

2. ต่างกันยังไงระหว่าง REQUIRES กับ PRIV_REQUIRES
`REQUIRES` คือ dependency ที่ให้ component อื่นเรียกใช้ได้ด้วย เหมือนแชร์ให้คนอื่นเห็น
ส่วน `PRIV_REQUIRES` ใช้ได้แค่ข้างใน component ตัวเองเท่านั้น คนอื่นมองไม่เห็น
พูดง่าย ๆ คือ public กับ private ของ dependency นั่นแหละ

3. เลือกใช้ local หรือ managed component ดูจากอะไร
ถ้าโค้ดยังอยู่ในช่วงพัฒนา ใช้เฉพาะโปรเจกต์นี้ ก็ใช้ **local component** จะสะดวกกว่า
แต่ถ้าอยากแชร์ให้หลายโปรเจกต์ หรือหลายคนใช้ร่วมกัน ควรใช้ **managed component** เพราะมันมีระบบจัดการเวอร์ชันให้อัตโนมัติ อัปเดตง่ายกว่า

4. ถ้าในทีมใหญ่ จะจัดการ component ยังไงให้ดี
ต้องแบ่งหน้าที่แต่ละ component ให้ชัดเจน อย่าให้ซ้ำกัน
ใช้ `REQUIRES` กับ `PRIV_REQUIRES` ให้ถูก
พยายามไม่ให้มีการพึ่งพากันมั่ว ๆ (เช่น component A ต้องใช้ B แล้ว B ต้องใช้ A อีก)
แล้วก็เก็บโค้ดทุกอย่างไว้ใน git มี version control ชัด ๆ จะได้ไม่งงเวลาอัปเดต

5. ถ้า component ต้องใช้ hardware จะเทสต์ยังไง
ก็ใช้วิธีจำลอง hardware เอา (mock) เพื่อทดสอบ logic ก่อน ไม่ต้องต่อบอร์ดจริงตลอด
ถ้าอยากเช็กของจริง ค่อยเทสต์ตอนสุดท้ายบนบอร์ดจริงอีกที เพื่อดูว่าทำงานครบทุกส่วนไหม
